1. Check RVIZ only
ros2 launch barista_robot_description urdf_visualize.launch.py
ros2 run joint_state_publisher_gui joint_state_publisher_gui
rviz2 -d src/barista_robot_description/rviz/rviz_config.rviz

2. Gazebo and rviz
- ros2 launch barista_robot_gazebo start_world.launch.py
- ros2 run joint_state_publisher_gui joint_state_publisher_gui
- comment out
        <gazebo>
        <plugin name="barista_robot_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
    
- ros2 launch barista_robot_gazebo spawn_robot_ros2.launch.xml

3. Gazebo, rviz
- ros2 launch barista_robot_gazebo start_world.launch.py
- uncomment 
        <gazebo>
        <plugin name="barista_robot_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
-ros2 launch barista_robot_gazebo spawn_robot_ros2.launch.xml

4. all in one for part1.
ros2 launch barista_robot_description barista_urdf.launch.py

5. part 2
ros2 launch barista_robot_description barista_xacro.launch.py

6. dynamic TF broadcast for two robots (Not finished)
ros2 run barista_robot_description barista_robot_odom_to_tf_pub.py --ros-args -r __ns:=/Morty
ros2 run barista_robot_description barista_robot_odom_to_tf_pub.py --ros-args -r __ns:=/Rick

7. dynamic TF broadcast for two robots with CLI (succcess)
ros2 run tf2_ros static_transform_publisher --x 0 --y 0 --z 0 --yaw 0 --pitch 0 --roll 0 --frame-id world --child-frame-id /Rick/odom
ros2 run tf2_ros static_transform_publisher --x 0 --y 0 --z 0 --yaw 0 --pitch 0 --roll 0 --frame-id world --child-frame-id /Morty/odom